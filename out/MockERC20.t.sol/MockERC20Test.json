{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "test_MockERC20_burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "test_MockERC20_mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_MockERC20_name",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_MockERC20_symbol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "479:1492:37:-:0;;;1426:26:24;;;-1:-1:-1;;1426:26:24;1448:4;1426:26;;;479:1492:37;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "479:1492:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;749:99;;;:::i;:::-;;856:95;;;:::i;519:92::-;;579:28;519:92;;;;;-1:-1:-1;;;;;190:32:42;;;172:51;;160:2;145:18;519:92:37;;;;;;;;1469:499;;;;;;:::i;:::-;;:::i;959:101::-;;;:::i;1689:514:24:-;;;:::i;:::-;;;758:14:42;;751:22;733:41;;721:2;706:18;1689:514:24;593:187:42;1068:393:37;;;;;;:::i;:::-;;:::i;1426:26:24:-;;;;;;;;;749:99:37;825:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;813:9;;:27;;;;;-1:-1:-1;;;;;813:27:37;;;;;-1:-1:-1;;;;;813:27:37;;;;;;749:99::o;856:95::-;905:38;914:9;;;;;;;;;-1:-1:-1;;;;;914:9:37;-1:-1:-1;;;;;914:14:37;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;914:16:37;;;;;;;;;;;;:::i;:::-;932:10;;;;;;;;;;;;;-1:-1:-1;;;932:10:37;;;905:8;:38::i;:::-;856:95::o;1469:499::-;1546:28;;-1:-1:-1;;;1546:28:37;;-1:-1:-1;;;;;1556:17:37;;;;1546:28;;;733:41:42;1546:9:37;;;;706:18:42;;1546:28:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1585:22:37;;-1:-1:-1;;;1585:22:37;;1595:11;;;1585:22;;;733:41:42;1585:9:37;;-1:-1:-1;1585:9:37;;-1:-1:-1;706:18:42;;1585:22:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1629:9:37;;:24;;-1:-1:-1;;;1629:24:37;;-1:-1:-1;;;;;190:32:42;;;1629:24:37;;;172:51:42;1620:37:37;;-1:-1:-1;1629:9:37;;;;;;;;-1:-1:-1;1629:19:37;;145:18:42;;1629:24:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1655:1;1620:8;:37::i;:::-;1668:36;1677:9;;;;;;;;;-1:-1:-1;;;;;1677:9:37;-1:-1:-1;;;;;1677:21:37;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1668:36;1717:9;;:28;;-1:-1:-1;;;1717:28:37;;-1:-1:-1;;;;;2663:32:42;;;1717:28:37;;;2645:51:42;2712:18;;;2705:34;;;1717:9:37;;;;;;;;:14;;2618:18:42;;1717:28:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1767:9:37;;:24;;-1:-1:-1;;;1767:24:37;;-1:-1:-1;;;;;190:32:42;;;1767:24:37;;;172:51:42;1758:43:37;;-1:-1:-1;1767:9:37;;;;;;;;-1:-1:-1;1767:19:37;;145:18:42;;1767:24:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1793:7;1758:8;:43::i;:::-;1814:13;;-1:-1:-1;;;1814:13:37;;-1:-1:-1;;;;;190:32:42;;1814:13:37;;;172:51:42;1814:8:37;;;;145:18:42;;1814:13:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1840:9:37;;:23;;-1:-1:-1;;;1840:23:37;;;;;2896:25:42;;;1840:9:37;;;;-1:-1:-1;;;;;1840:9:37;;-1:-1:-1;1840:14:37;;-1:-1:-1;2869:18:42;;1840:23:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1885:9:37;;:24;;-1:-1:-1;;;1885:24:37;;-1:-1:-1;;;;;190:32:42;;;1885:24:37;;;172:51:42;1876:37:37;;-1:-1:-1;1885:9:37;;;;;;;;-1:-1:-1;1885:19:37;;145:18:42;;1885:24:37;14:215:42;1876:37:37;1924:36;1933:9;;;;;;;;;-1:-1:-1;;;;;1933:9:37;-1:-1:-1;;;;;1933:21:37;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1924:36;1469:499;;:::o;959:101::-;1010:42;1019:9;;;;;;;;;-1:-1:-1;;;;;1019:9:37;-1:-1:-1;;;;;1019:16:37;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1019:18:37;;;;;;;;;;;;:::i;:::-;1039:12;;;;;;;;;;;;;-1:-1:-1;;;1039:12:37;;;1010:8;:42::i;1689:514:24:-;1723:4;1743:7;;;;;;;1739:458;;;-1:-1:-1;1773:7:24;;;;;;;;1689:514::o;1739:458::-;1811:17;2739:42;2727:55;2808:16;1850:304;;2017:43;;;1517:64;2017:43;;;2645:51:42;;;-1:-1:-1;;;2712:18:42;;;2705:34;2017:43:24;;;;;;;;;2618:18:42;;;2017:43:24;;;-1:-1:-1;;1517:64:24;;1956:105;;1980:34;;1956:105;;;:::i;:::-;;;;-1:-1:-1;;1956:105:24;;;;;;;;;;1917:162;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1890:189;;;2123:7;2112:27;;;;;;;;;;;;:::i;:::-;2097:42;;1872:282;1850:304;2174:12;1689:514;-1:-1:-1;1689:514:24:o;1068:393:37:-;1145:28;;-1:-1:-1;;;1145:28:37;;-1:-1:-1;;;;;1155:17:37;;;;1145:28;;;733:41:42;1145:9:37;;;;706:18:42;;1145:28:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1184:22:37;;-1:-1:-1;;;1184:22:37;;1194:11;;;1184:22;;;733:41:42;1184:9:37;;-1:-1:-1;1184:9:37;;-1:-1:-1;706:18:42;;1184:22:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1228:9:37;;:24;;-1:-1:-1;;;1228:24:37;;-1:-1:-1;;;;;190:32:42;;;1228:24:37;;;172:51:42;1219:37:37;;-1:-1:-1;1228:9:37;;;;;;;;-1:-1:-1;1228:19:37;;145:18:42;;1228:24:37;14:215:42;1219:37:37;1267:36;1276:9;;;;;;;;;-1:-1:-1;;;;;1276:9:37;-1:-1:-1;;;;;1276:21:37;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1267:36;1316:9;;:28;;-1:-1:-1;;;1316:28:37;;-1:-1:-1;;;;;2663:32:42;;;1316:28:37;;;2645:51:42;2712:18;;;2705:34;;;1316:9:37;;;;;;;;:14;;2618:18:42;;1316:28:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1366:9:37;;:24;;-1:-1:-1;;;1366:24:37;;-1:-1:-1;;;;;190:32:42;;;1366:24:37;;;172:51:42;1357:43:37;;-1:-1:-1;1366:9:37;;;;;;;;-1:-1:-1;1366:19:37;;145:18:42;;1366:24:37;14:215:42;1357:43:37;1411:42;1420:9;;;;;;;;;-1:-1:-1;;;;;1420:9:37;-1:-1:-1;;;;;1420:21:37;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15850:344:24;15986:1;15969:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;15959:30;;;;;;15952:1;15935:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;15925:30;;;;;;:64;15921:267;;16010:43;;;;;4670:2:42;4652:21;;;4709:2;4689:18;;;4682:30;4748:34;4743:2;4728:18;;4721:62;-1:-1:-1;;;4814:2:42;4799:18;;4792:34;4858:3;4843:19;;4468:400;16010:43:24;;;;;;;;16072:33;16103:1;16072:33;;;;;;:::i;:::-;;;;;;;;16124;16155:1;16124:33;;;;;;:::i;:::-;;;;;;;;16171:6;:4;:6::i;5093:268::-;5161:1;5156;:6;5152:203;;5183:41;;;;;6569:2:42;6551:21;;;6608:2;6588:18;;;6581:30;6647:34;6642:2;6627:18;;6620:62;-1:-1:-1;;;6713:2:42;6698:18;;6691:32;6755:3;6740:19;;6367:398;5183:41:24;;;;;;;;5243:31;5272:1;5243:31;;;;;;:::i;:::-;;;;;;;;5293;5322:1;5293:31;;;;;;:::i;2209:374::-;2739:42;2727:55;2808:16;2252:301;;2411:67;;;1517:64;2411:67;;;7678:51:42;;;-1:-1:-1;;;7745:18:42;;;7738:34;;;;2471:4:24;7788:18:42;;;7781:34;2289:11:24;;1517:64;2365:43;;7651:18:42;;2411:67:24;;;-1:-1:-1;;2411:67:24;;;;;;;;;;2341:138;;;2411:67;2341:138;;:::i;:::-;;;;-1:-1:-1;;2341:138:24;;;;;;;;;;2306:187;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2252:301:24;2562:7;:14;;-1:-1:-1;;2562:14:24;;;;;2209:374::o;-1:-1:-1:-;;;;;;;;:::o;234:354:42:-;302:6;310;363:2;351:9;342:7;338:23;334:32;331:52;;;379:1;376;369:12;331:52;405:23;;-1:-1:-1;;;;;457:31:42;;447:42;;437:70;;503:1;500;493:12;437:70;526:5;578:2;563:18;;;;550:32;;-1:-1:-1;;;234:354:42:o;785:127::-;846:10;841:3;837:20;834:1;827:31;877:4;874:1;867:15;901:4;898:1;891:15;917:250;1002:1;1012:113;1026:6;1023:1;1020:13;1012:113;;;1102:11;;;1096:18;1083:11;;;1076:39;1048:2;1041:10;1012:113;;;-1:-1:-1;;1159:1:42;1141:16;;1134:27;917:250::o;1172:897::-;1252:6;1305:2;1293:9;1284:7;1280:23;1276:32;1273:52;;;1321:1;1318;1311:12;1273:52;1354:9;1348:16;1383:18;1424:2;1416:6;1413:14;1410:34;;;1440:1;1437;1430:12;1410:34;1478:6;1467:9;1463:22;1453:32;;1523:7;1516:4;1512:2;1508:13;1504:27;1494:55;;1545:1;1542;1535:12;1494:55;1574:2;1568:9;1596:2;1592;1589:10;1586:36;;;1602:18;;:::i;:::-;1677:2;1671:9;1645:2;1731:13;;-1:-1:-1;;1727:22:42;;;1751:2;1723:31;1719:40;1707:53;;;1775:18;;;1795:22;;;1772:46;1769:72;;;1821:18;;:::i;:::-;1861:10;1857:2;1850:22;1896:2;1888:6;1881:18;1936:7;1931:2;1926;1922;1918:11;1914:20;1911:33;1908:53;;;1957:1;1954;1947:12;1908:53;1970:68;2035:2;2030;2022:6;2018:15;2013:2;2009;2005:11;1970:68;:::i;:::-;2057:6;1172:897;-1:-1:-1;;;;;;;1172:897:42:o;2282:184::-;2352:6;2405:2;2393:9;2384:7;2380:23;2376:32;2373:52;;;2421:1;2418;2411:12;2373:52;-1:-1:-1;2444:16:42;;2282:184;-1:-1:-1;2282:184:42:o;3211:384::-;-1:-1:-1;;;;;;3396:33:42;;3384:46;;3453:13;;3366:3;;3475:74;3453:13;3538:1;3529:11;;3522:4;3510:17;;3475:74;:::i;:::-;3569:16;;;;3587:1;3565:24;;3211:384;-1:-1:-1;;;3211:384:42:o;3600:287::-;3729:3;3767:6;3761:13;3783:66;3842:6;3837:3;3830:4;3822:6;3818:17;3783:66;:::i;:::-;3865:16;;;;;3600:287;-1:-1:-1;;3600:287:42:o;3892:277::-;3959:6;4012:2;4000:9;3991:7;3987:23;3983:32;3980:52;;;4028:1;4025;4018:12;3980:52;4060:9;4054:16;4113:5;4106:13;4099:21;4092:5;4089:32;4079:60;;4135:1;4132;4125:12;4079:60;4158:5;3892:277;-1:-1:-1;;;3892:277:42:o;5037:271::-;5079:3;5117:5;5111:12;5144:6;5139:3;5132:19;5160:76;5229:6;5222:4;5217:3;5213:14;5206:4;5199:5;5195:16;5160:76;:::i;:::-;5290:2;5269:15;-1:-1:-1;;5265:29:42;5256:39;;;;5297:4;5252:50;;5037:271;-1:-1:-1;;5037:271:42:o;5313:440::-;5563:2;5552:9;5545:21;5526:4;5589:49;5634:2;5623:9;5619:18;4950:2;4938:15;;-1:-1:-1;;;4978:4:42;4969:14;;4962:36;5023:2;5014:12;;4873:159;5589:49;5686:9;5678:6;5674:22;5669:2;5658:9;5654:18;5647:50;5714:33;5740:6;5732;5714:33;:::i;:::-;5706:41;5313:440;-1:-1:-1;;;;5313:440:42:o;5922:::-;6172:2;6161:9;6154:21;6135:4;6198:49;6243:2;6232:9;6228:18;5835:2;5823:15;;-1:-1:-1;;;5863:4:42;5854:14;;5847:36;5908:2;5899:12;;5758:159;6770:348;7000:2;6989:9;6982:21;6963:4;7020:49;7065:2;7054:9;7050:18;4950:2;4938:15;;-1:-1:-1;;;4978:4:42;4969:14;;4962:36;5023:2;5014:12;;4873:159;7020:49;7012:57;;7105:6;7100:2;7089:9;7085:18;7078:34;6770:348;;;;:::o;7123:::-;7353:2;7342:9;7335:21;7316:4;7373:49;7418:2;7407:9;7403:18;5835:2;5823:15;;-1:-1:-1;;;5863:4:42;5854:14;;5847:36;5908:2;5899:12;;5758:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "test_MockERC20_burn(address,uint256)": "718ee997",
    "test_MockERC20_mint(address,uint256)": "d09435f7",
    "test_MockERC20_name()": "23158e9e",
    "test_MockERC20_symbol()": "b72fc1d1",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"test_MockERC20_burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"test_MockERC20_mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_MockERC20_name\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_MockERC20_symbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/MockERC20.t.sol\":\"MockERC20Test\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":foundry-test-utility/contracts/=node_modules/foundry-test-utility/contracts/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/MockERC20.sol\":{\"keccak256\":\"0x70a614fac8a137ba02f4a4c25686bb4d2025324daf5f1e62eb903edfb51c55a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://533a73d662d269ed6186bf238b1dc0b041f511511ffa3801272414be901dbbb1\",\"dweb:/ipfs/QmUNK35KHAZFm6vRrPfM6KRBuUk7iNGwPaa6R9V6zmVaKW\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"node_modules/foundry-test-utility/contracts/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x16b459b2f492aa6a07c36666b96dbe2dba3a89b2a264e334cf6ea67aadeb9999\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3042d82632baf10eff144be2e6c90615db5c1479228ca13b77c49b611e4695d\",\"dweb:/ipfs/Qmd4tNRjBr5tYfSQpKMchcL11DSSvuek8u1zTGFuziPtwz\"]},\"node_modules/foundry-test-utility/contracts/utils/base.sol\":{\"keccak256\":\"0x9e6417f65cbfff68d2f4c0cf6054de65c17e6e01f13e86c4f503fe5679705a6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e5df9d1a51a5030241e5a6a19ff5af882f56d231f53cbd074ab68417e00fc3f\",\"dweb:/ipfs/QmZx3rYszb9VJKCBLAn6f6FNwniC6q4gzZ97V8vCVhgUiR\"]},\"node_modules/foundry-test-utility/contracts/utils/cheatcodes.sol\":{\"keccak256\":\"0xc02a405295d42405e69b3038103c101ec84aa9d32b72d2437fbfe42bb01c833c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7f301fab4745b80ea56acc5a9215882f37c24eb29fc7841fc56f91107fa93a3\",\"dweb:/ipfs/QmXN3cDdJsWdFqvyzZCdCRYRuQxzjhofWD1m8c6jYTnyAZ\"]},\"node_modules/foundry-test-utility/contracts/utils/console.sol\":{\"keccak256\":\"0x741408903b4ec3bc89f489d87ac7e60774f32d4807b16615fc1bf1b4e488c047\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c4d7b9209599c3eb24122727ea69398a92d10e362738c19a056ee1e1fdad9b8\",\"dweb:/ipfs/QmeyVsifyUtPA4WesmdB6jzGtrJmisC3rzoSSodGJHoBww\"]},\"node_modules/foundry-test-utility/contracts/utils/console2.sol\":{\"keccak256\":\"0x56176298c9287e6d5c6119f860145a323217cdfd3ae63ebf2c5daf7ec0d4a548\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9818aa27f22eb0a451d4168ac4a320a55b6bba5f098fe3f68f9498c50b108413\",\"dweb:/ipfs/QmeBwCn1V4PfS1CrJhHgbJsyB5CgB6EZh7KcqmgGQSX15e\"]},\"node_modules/foundry-test-utility/contracts/utils/ds-test.sol\":{\"keccak256\":\"0xb4da502b5c1d490b452944de133d5796246b44dcb74ca0af5c0a3665f9f6a41c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3408ee0c32935735ea2a59e919c9c32f6afaec6eab67cb08ce07d7fc74565c2d\",\"dweb:/ipfs/QmaeuEoBUTYNEuw3bch4wArqEuzh2xeF2QMjYpWAB7pGtQ\"]},\"node_modules/foundry-test-utility/contracts/utils/stdAssertions.sol\":{\"keccak256\":\"0x8b7d4d463f5105d009342f1448404cf6704db614029096eed954182124243d2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9c9e76c86c8242d4179414cb061a6c16f8b62968bd1054fb8a55ffaafea5778\",\"dweb:/ipfs/QmPBDmtKFQEagbSAkQRtUmyjwwVkasxJQRskarirC62UZK\"]},\"node_modules/foundry-test-utility/contracts/utils/stdChains.sol\":{\"keccak256\":\"0x181af0f09ebbc4c0ca88f2d7162afce51e80994b5ef5e0b9565ea4ecc2f8123e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ba756f159886ea256c75dd86b8b183f44aa1b6b9f7c6101a42659d92451da6f\",\"dweb:/ipfs/QmNnMUfoD2WU229n1hmZQUFKn3aBF6QexC6tzRiWqozXiP\"]},\"node_modules/foundry-test-utility/contracts/utils/stdCheats.sol\":{\"keccak256\":\"0x6b0ca1f82e49516e14025a685369e6cdcba201f10408873c8e8f998e0824c8ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b90ceb089fe08edfac93654b40db59e0ff21cf1545c6e50b86788b008c13d8f\",\"dweb:/ipfs/QmbXX6uZgyLugoEpJ68H3w8CxrJvDytC6kkyRTkrZUT6KT\"]},\"node_modules/foundry-test-utility/contracts/utils/stdError.sol\":{\"keccak256\":\"0x168da5e432ff9ee6256a58f136c6039deffd33189b90c6caef6f2402e1e7a394\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b1776fb62000e9c16a2345672380c0e6eddda533ab24d3338be3c8645c1adfa\",\"dweb:/ipfs/QmQFVpx6y7rPEo7G9wKX8fp3MvrQwCmSg3hSZViKoNHLmc\"]},\"node_modules/foundry-test-utility/contracts/utils/stdInvariant.sol\":{\"keccak256\":\"0xd1c9e1b702c7570ebcd2bdda33a24f936d6e2f4352c9a44825dd77ed163010ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f21b87a793a85031ec4a00c7bdba2ca0900e5ff86a58babfab15d3df98971a7\",\"dweb:/ipfs/QmWRjPLjLjt4LNh8vtQbFxCJRWufDyPmawRt8FSFdqpbYL\"]},\"node_modules/foundry-test-utility/contracts/utils/stdJson.sol\":{\"keccak256\":\"0xdc470133579b87699a008650096355f482277e875dd279cae971ae01f3c87cb8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7df70105e2dee58ed1ae94cdc33c87efd1a8db4b103afcf3e1cbd2e8f851b54e\",\"dweb:/ipfs/QmULRTf9eJa3tAZmdqrtESdwTWkTeri8wF7wASgcC8M2cP\"]},\"node_modules/foundry-test-utility/contracts/utils/stdMath.sol\":{\"keccak256\":\"0xfafccaf94bdf4038aee1a51f4b5aa66fca0e817d7fa698b7eed22b51cc4d3a28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d1ee9d87abb9debfb8a68eba6b179f810074b6deac0ed57b1236049f540aef1\",\"dweb:/ipfs/QmcsCnmAnqPzkiB488QR3GkeMbJY7XA6tooghcghBNzJnN\"]},\"node_modules/foundry-test-utility/contracts/utils/stdStorage.sol\":{\"keccak256\":\"0xec66b0a325378633183168d966250593d1b80700ac434b74903afb0fa795fb25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73beb92959a5a4e82e8d949a4262714eec7764256fd26337426732aba6c859d7\",\"dweb:/ipfs/Qma83FiZ2pUEiKLLJGBH1dbM2FaBqKeisSLi2vLZcRzEdY\"]},\"node_modules/foundry-test-utility/contracts/utils/stdStyle.sol\":{\"keccak256\":\"0x0391052857ea8c3628f87c81add22ccb62948363dac21cab5993437a8ba7339e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91c6fceff60d360910deabdce36966e53ecd9a3ee68e8c949c735730370a9477\",\"dweb:/ipfs/QmTEhfGDBiN2deoJLTK2vHPxB8z9W8Sfz1RBRu6aMMPQex\"]},\"node_modules/foundry-test-utility/contracts/utils/stdUtils.sol\":{\"keccak256\":\"0x7bb0c37ded8c34d24ec636def6a62bb2838a2acde001ba42153d2a7552fa1776\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cdfa4656fd43f5ca6501c327254e910cf15f909dad6e4e52833426c1d45ebcac\",\"dweb:/ipfs/QmYbaKL2Swbi1yUFQLeje6iGXeb4kzny9bGXFPX2cz5ZY4\"]},\"node_modules/foundry-test-utility/contracts/utils/test.sol\":{\"keccak256\":\"0x18147642cf7104559686ce73ef67bf83d08af2d3f88015520c3920837f39ffe2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dbc1c89b888e67b39815cb02e6311a3ba4be6fd3046801b4497dedd156accc2\",\"dweb:/ipfs/QmPRyX1HWnkaM7QwBoBDHuSSQ9Vd9JjYkEXTUJgHbWaDpi\"]},\"node_modules/foundry-test-utility/contracts/utils/vm.sol\":{\"keccak256\":\"0x27272e6d5bf6478f51b0831826b01975eda8cc39301cd1bf9e105c044ea27f32\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5037151cf4540cf71a7ece423f1b20bcd276e3553bf4ccdc2c89a259ab13e655\",\"dweb:/ipfs/QmU4c1jCnqGpLS22fmogfL7nvW5AK98yKVYiCXtzSExjBD\"]},\"test/MockERC20.t.sol\":{\"keccak256\":\"0x32cb355bc8c4433d53f65c5e95bb0a1090b7f55a3f9d0e67a3b99194e3ead5d7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://40deb978faa3140839e45625efc2bd9d6a366fc57201efc4ee54a19eb08a738b\",\"dweb:/ipfs/QmQtBC2dPWRuMu6yZBYfL3t5sa156VtcjU4ugGPDS7QzVg\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.23+commit.f704f362"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_MockERC20_burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to_",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount_",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_MockERC20_mint"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_MockERC20_name"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_MockERC20_symbol"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/=node_modules/@chainlink/",
        "@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/",
        "@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        "@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "foundry-test-utility/contracts/=node_modules/foundry-test-utility/contracts/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/MockERC20.t.sol": "MockERC20Test"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/MockERC20.sol": {
        "keccak256": "0x70a614fac8a137ba02f4a4c25686bb4d2025324daf5f1e62eb903edfb51c55a6",
        "urls": [
          "bzz-raw://533a73d662d269ed6186bf238b1dc0b041f511511ffa3801272414be901dbbb1",
          "dweb:/ipfs/QmUNK35KHAZFm6vRrPfM6KRBuUk7iNGwPaa6R9V6zmVaKW"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
        "urls": [
          "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
          "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
        "urls": [
          "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
          "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
        ],
        "license": "MIT"
      },
      "node_modules/foundry-test-utility/contracts/interfaces/IMulticall3.sol": {
        "keccak256": "0x16b459b2f492aa6a07c36666b96dbe2dba3a89b2a264e334cf6ea67aadeb9999",
        "urls": [
          "bzz-raw://c3042d82632baf10eff144be2e6c90615db5c1479228ca13b77c49b611e4695d",
          "dweb:/ipfs/Qmd4tNRjBr5tYfSQpKMchcL11DSSvuek8u1zTGFuziPtwz"
        ],
        "license": "MIT"
      },
      "node_modules/foundry-test-utility/contracts/utils/base.sol": {
        "keccak256": "0x9e6417f65cbfff68d2f4c0cf6054de65c17e6e01f13e86c4f503fe5679705a6b",
        "urls": [
          "bzz-raw://4e5df9d1a51a5030241e5a6a19ff5af882f56d231f53cbd074ab68417e00fc3f",
          "dweb:/ipfs/QmZx3rYszb9VJKCBLAn6f6FNwniC6q4gzZ97V8vCVhgUiR"
        ],
        "license": "MIT"
      },
      "node_modules/foundry-test-utility/contracts/utils/cheatcodes.sol": {
        "keccak256": "0xc02a405295d42405e69b3038103c101ec84aa9d32b72d2437fbfe42bb01c833c",
        "urls": [
          "bzz-raw://a7f301fab4745b80ea56acc5a9215882f37c24eb29fc7841fc56f91107fa93a3",
          "dweb:/ipfs/QmXN3cDdJsWdFqvyzZCdCRYRuQxzjhofWD1m8c6jYTnyAZ"
        ],
        "license": "MIT"
      },
      "node_modules/foundry-test-utility/contracts/utils/console.sol": {
        "keccak256": "0x741408903b4ec3bc89f489d87ac7e60774f32d4807b16615fc1bf1b4e488c047",
        "urls": [
          "bzz-raw://5c4d7b9209599c3eb24122727ea69398a92d10e362738c19a056ee1e1fdad9b8",
          "dweb:/ipfs/QmeyVsifyUtPA4WesmdB6jzGtrJmisC3rzoSSodGJHoBww"
        ],
        "license": "MIT"
      },
      "node_modules/foundry-test-utility/contracts/utils/console2.sol": {
        "keccak256": "0x56176298c9287e6d5c6119f860145a323217cdfd3ae63ebf2c5daf7ec0d4a548",
        "urls": [
          "bzz-raw://9818aa27f22eb0a451d4168ac4a320a55b6bba5f098fe3f68f9498c50b108413",
          "dweb:/ipfs/QmeBwCn1V4PfS1CrJhHgbJsyB5CgB6EZh7KcqmgGQSX15e"
        ],
        "license": "MIT"
      },
      "node_modules/foundry-test-utility/contracts/utils/ds-test.sol": {
        "keccak256": "0xb4da502b5c1d490b452944de133d5796246b44dcb74ca0af5c0a3665f9f6a41c",
        "urls": [
          "bzz-raw://3408ee0c32935735ea2a59e919c9c32f6afaec6eab67cb08ce07d7fc74565c2d",
          "dweb:/ipfs/QmaeuEoBUTYNEuw3bch4wArqEuzh2xeF2QMjYpWAB7pGtQ"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/foundry-test-utility/contracts/utils/stdAssertions.sol": {
        "keccak256": "0x8b7d4d463f5105d009342f1448404cf6704db614029096eed954182124243d2b",
        "urls": [
          "bzz-raw://b9c9e76c86c8242d4179414cb061a6c16f8b62968bd1054fb8a55ffaafea5778",
          "dweb:/ipfs/QmPBDmtKFQEagbSAkQRtUmyjwwVkasxJQRskarirC62UZK"
        ],
        "license": "MIT"
      },
      "node_modules/foundry-test-utility/contracts/utils/stdChains.sol": {
        "keccak256": "0x181af0f09ebbc4c0ca88f2d7162afce51e80994b5ef5e0b9565ea4ecc2f8123e",
        "urls": [
          "bzz-raw://0ba756f159886ea256c75dd86b8b183f44aa1b6b9f7c6101a42659d92451da6f",
          "dweb:/ipfs/QmNnMUfoD2WU229n1hmZQUFKn3aBF6QexC6tzRiWqozXiP"
        ],
        "license": "MIT"
      },
      "node_modules/foundry-test-utility/contracts/utils/stdCheats.sol": {
        "keccak256": "0x6b0ca1f82e49516e14025a685369e6cdcba201f10408873c8e8f998e0824c8ca",
        "urls": [
          "bzz-raw://2b90ceb089fe08edfac93654b40db59e0ff21cf1545c6e50b86788b008c13d8f",
          "dweb:/ipfs/QmbXX6uZgyLugoEpJ68H3w8CxrJvDytC6kkyRTkrZUT6KT"
        ],
        "license": "MIT"
      },
      "node_modules/foundry-test-utility/contracts/utils/stdError.sol": {
        "keccak256": "0x168da5e432ff9ee6256a58f136c6039deffd33189b90c6caef6f2402e1e7a394",
        "urls": [
          "bzz-raw://4b1776fb62000e9c16a2345672380c0e6eddda533ab24d3338be3c8645c1adfa",
          "dweb:/ipfs/QmQFVpx6y7rPEo7G9wKX8fp3MvrQwCmSg3hSZViKoNHLmc"
        ],
        "license": "MIT"
      },
      "node_modules/foundry-test-utility/contracts/utils/stdInvariant.sol": {
        "keccak256": "0xd1c9e1b702c7570ebcd2bdda33a24f936d6e2f4352c9a44825dd77ed163010ba",
        "urls": [
          "bzz-raw://8f21b87a793a85031ec4a00c7bdba2ca0900e5ff86a58babfab15d3df98971a7",
          "dweb:/ipfs/QmWRjPLjLjt4LNh8vtQbFxCJRWufDyPmawRt8FSFdqpbYL"
        ],
        "license": "MIT"
      },
      "node_modules/foundry-test-utility/contracts/utils/stdJson.sol": {
        "keccak256": "0xdc470133579b87699a008650096355f482277e875dd279cae971ae01f3c87cb8",
        "urls": [
          "bzz-raw://7df70105e2dee58ed1ae94cdc33c87efd1a8db4b103afcf3e1cbd2e8f851b54e",
          "dweb:/ipfs/QmULRTf9eJa3tAZmdqrtESdwTWkTeri8wF7wASgcC8M2cP"
        ],
        "license": "MIT"
      },
      "node_modules/foundry-test-utility/contracts/utils/stdMath.sol": {
        "keccak256": "0xfafccaf94bdf4038aee1a51f4b5aa66fca0e817d7fa698b7eed22b51cc4d3a28",
        "urls": [
          "bzz-raw://4d1ee9d87abb9debfb8a68eba6b179f810074b6deac0ed57b1236049f540aef1",
          "dweb:/ipfs/QmcsCnmAnqPzkiB488QR3GkeMbJY7XA6tooghcghBNzJnN"
        ],
        "license": "MIT"
      },
      "node_modules/foundry-test-utility/contracts/utils/stdStorage.sol": {
        "keccak256": "0xec66b0a325378633183168d966250593d1b80700ac434b74903afb0fa795fb25",
        "urls": [
          "bzz-raw://73beb92959a5a4e82e8d949a4262714eec7764256fd26337426732aba6c859d7",
          "dweb:/ipfs/Qma83FiZ2pUEiKLLJGBH1dbM2FaBqKeisSLi2vLZcRzEdY"
        ],
        "license": "MIT"
      },
      "node_modules/foundry-test-utility/contracts/utils/stdStyle.sol": {
        "keccak256": "0x0391052857ea8c3628f87c81add22ccb62948363dac21cab5993437a8ba7339e",
        "urls": [
          "bzz-raw://91c6fceff60d360910deabdce36966e53ecd9a3ee68e8c949c735730370a9477",
          "dweb:/ipfs/QmTEhfGDBiN2deoJLTK2vHPxB8z9W8Sfz1RBRu6aMMPQex"
        ],
        "license": "MIT"
      },
      "node_modules/foundry-test-utility/contracts/utils/stdUtils.sol": {
        "keccak256": "0x7bb0c37ded8c34d24ec636def6a62bb2838a2acde001ba42153d2a7552fa1776",
        "urls": [
          "bzz-raw://cdfa4656fd43f5ca6501c327254e910cf15f909dad6e4e52833426c1d45ebcac",
          "dweb:/ipfs/QmYbaKL2Swbi1yUFQLeje6iGXeb4kzny9bGXFPX2cz5ZY4"
        ],
        "license": "MIT"
      },
      "node_modules/foundry-test-utility/contracts/utils/test.sol": {
        "keccak256": "0x18147642cf7104559686ce73ef67bf83d08af2d3f88015520c3920837f39ffe2",
        "urls": [
          "bzz-raw://1dbc1c89b888e67b39815cb02e6311a3ba4be6fd3046801b4497dedd156accc2",
          "dweb:/ipfs/QmPRyX1HWnkaM7QwBoBDHuSSQ9Vd9JjYkEXTUJgHbWaDpi"
        ],
        "license": "MIT"
      },
      "node_modules/foundry-test-utility/contracts/utils/vm.sol": {
        "keccak256": "0x27272e6d5bf6478f51b0831826b01975eda8cc39301cd1bf9e105c044ea27f32",
        "urls": [
          "bzz-raw://5037151cf4540cf71a7ece423f1b20bcd276e3553bf4ccdc2c89a259ab13e655",
          "dweb:/ipfs/QmU4c1jCnqGpLS22fmogfL7nvW5AK98yKVYiCXtzSExjBD"
        ],
        "license": "MIT"
      },
      "test/MockERC20.t.sol": {
        "keccak256": "0x32cb355bc8c4433d53f65c5e95bb0a1090b7f55a3f9d0e67a3b99194e3ead5d7",
        "urls": [
          "bzz-raw://40deb978faa3140839e45625efc2bd9d6a366fc57201efc4ee54a19eb08a738b",
          "dweb:/ipfs/QmQtBC2dPWRuMu6yZBYfL3t5sa156VtcjU4ugGPDS7QzVg"
        ],
        "license": "Unlicense"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/MockERC20.t.sol",
    "id": 34329,
    "exportedSymbols": {
      "CheatCodes": [
        5895
      ],
      "DSTest": [
        23854
      ],
      "MockERC20": [
        1505
      ],
      "MockERC20Test": [
        34328
      ],
      "Vm": [
        34107
      ],
      "console": [
        13963
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1934:37",
    "nodes": [
      {
        "id": 34109,
        "nodeType": "PragmaDirective",
        "src": "39:24:37",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 34111,
        "nodeType": "ImportDirective",
        "src": "143:63:37",
        "nodes": [],
        "absolutePath": "node_modules/foundry-test-utility/contracts/utils/vm.sol",
        "file": "foundry-test-utility/contracts/utils/vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34329,
        "sourceUnit": 34108,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34110,
              "name": "Vm",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34107,
              "src": "151:2:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34112,
        "nodeType": "ImportDirective",
        "src": "208:58:37",
        "nodes": [],
        "absolutePath": "node_modules/foundry-test-utility/contracts/utils/console.sol",
        "file": "foundry-test-utility/contracts/utils/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34329,
        "sourceUnit": 13964,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34114,
        "nodeType": "ImportDirective",
        "src": "268:69:37",
        "nodes": [],
        "absolutePath": "node_modules/foundry-test-utility/contracts/utils/test.sol",
        "file": "foundry-test-utility/contracts/utils/test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34329,
        "sourceUnit": 32788,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34113,
              "name": "DSTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 23854,
              "src": "276:6:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34116,
        "nodeType": "ImportDirective",
        "src": "339:79:37",
        "nodes": [],
        "absolutePath": "node_modules/foundry-test-utility/contracts/utils/cheatcodes.sol",
        "file": "foundry-test-utility/contracts/utils/cheatcodes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34329,
        "sourceUnit": 5896,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34115,
              "name": "CheatCodes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5895,
              "src": "347:10:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34118,
        "nodeType": "ImportDirective",
        "src": "422:53:37",
        "nodes": [],
        "absolutePath": "contracts/MockERC20.sol",
        "file": "../contracts/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34329,
        "sourceUnit": 1506,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34117,
              "name": "MockERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1505,
              "src": "430:9:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34328,
        "nodeType": "ContractDefinition",
        "src": "479:1492:37",
        "nodes": [
          {
            "id": 34137,
            "nodeType": "VariableDeclaration",
            "src": "519:92:37",
            "nodes": [],
            "constant": true,
            "functionSelector": "3a768463",
            "mutability": "constant",
            "name": "vm",
            "nameLocation": "538:2:37",
            "scope": 34328,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Vm_$34107",
              "typeString": "contract Vm"
            },
            "typeName": {
              "id": 34122,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34121,
                "name": "Vm",
                "nameLocations": [
                  "519:2:37"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34107,
                "src": "519:2:37"
              },
              "referencedDeclaration": 34107,
              "src": "519:2:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$34107",
                "typeString": "contract Vm"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "6865766d20636865617420636f6465",
                                  "id": 34131,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "589:17:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d",
                                    "typeString": "literal_string \"hevm cheat code\""
                                  },
                                  "value": "hevm cheat code"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d",
                                    "typeString": "literal_string \"hevm cheat code\""
                                  }
                                ],
                                "id": 34130,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "579:9:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 34132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "579:28:37",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 34129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "571:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 34128,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "571:7:37",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 34133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "571:37:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 34127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "563:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint160_$",
                          "typeString": "type(uint160)"
                        },
                        "typeName": {
                          "id": 34126,
                          "name": "uint160",
                          "nodeType": "ElementaryTypeName",
                          "src": "563:7:37",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "563:46:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      }
                    ],
                    "id": 34125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "555:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 34124,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "555:7:37",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 34135,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "555:55:37",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 34123,
                "name": "Vm",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 34107,
                "src": "552:2:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Vm_$34107_$",
                  "typeString": "type(contract Vm)"
                }
              },
              "id": 34136,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "552:59:37",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$34107",
                "typeString": "contract Vm"
              }
            },
            "visibility": "public"
          },
          {
            "id": 34140,
            "nodeType": "VariableDeclaration",
            "src": "620:27:37",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "mockERC20",
            "nameLocation": "638:9:37",
            "scope": 34328,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$1505",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 34139,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34138,
                "name": "MockERC20",
                "nameLocations": [
                  "620:9:37"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1505,
                "src": "620:9:37"
              },
              "referencedDeclaration": 1505,
              "src": "620:9:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$1505",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "private"
          },
          {
            "id": 34143,
            "nodeType": "VariableDeclaration",
            "src": "656:40:37",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "_TEST_NAME",
            "nameLocation": "672:10:37",
            "scope": 34328,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 34141,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "656:6:37",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "4d6f636b4552433230",
              "id": 34142,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "685:11:37",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_a04369c50c2c5be35c20e48473e254bd44922e8118d2ce4916ec0bf1f27c1a5d",
                "typeString": "literal_string \"MockERC20\""
              },
              "value": "MockERC20"
            },
            "visibility": "internal"
          },
          {
            "id": 34146,
            "nodeType": "VariableDeclaration",
            "src": "703:37:37",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "_TEST_SYMBOL",
            "nameLocation": "719:12:37",
            "scope": 34328,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 34144,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "703:6:37",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "4d4f434b",
              "id": 34145,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "734:6:37",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_68c517c66587983dacbde85dde74f9eb525b7881b1753cee39b9677a9d863af0",
                "typeString": "literal_string \"MOCK\""
              },
              "value": "MOCK"
            },
            "visibility": "internal"
          },
          {
            "id": 34157,
            "nodeType": "FunctionDefinition",
            "src": "749:99:37",
            "nodes": [],
            "body": {
              "id": 34156,
              "nodeType": "Block",
              "src": "773:75:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 34154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34149,
                      "name": "mockERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34140,
                      "src": "813:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$1505",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 34152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "825:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockERC20_$1505_$",
                          "typeString": "function () returns (contract MockERC20)"
                        },
                        "typeName": {
                          "id": 34151,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 34150,
                            "name": "MockERC20",
                            "nameLocations": [
                              "829:9:37"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1505,
                            "src": "829:9:37"
                          },
                          "referencedDeclaration": 1505,
                          "src": "829:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockERC20_$1505",
                            "typeString": "contract MockERC20"
                          }
                        }
                      },
                      "id": 34153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "825:15:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockERC20_$1505",
                        "typeString": "contract MockERC20"
                      }
                    },
                    "src": "813:27:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockERC20_$1505",
                      "typeString": "contract MockERC20"
                    }
                  },
                  "id": 34155,
                  "nodeType": "ExpressionStatement",
                  "src": "813:27:37"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "758:5:37",
            "parameters": {
              "id": 34147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "763:2:37"
            },
            "returnParameters": {
              "id": 34148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "773:0:37"
            },
            "scope": 34328,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34168,
            "nodeType": "FunctionDefinition",
            "src": "856:95:37",
            "nodes": [],
            "body": {
              "id": 34167,
              "nodeType": "Block",
              "src": "894:57:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 34161,
                            "name": "mockERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34140,
                            "src": "914:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$1505",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 34162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "924:4:37",
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3163,
                          "src": "914:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 34163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "914:16:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 34164,
                        "name": "_TEST_NAME",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34143,
                        "src": "932:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 34160,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22384,
                        22409,
                        22439,
                        22464,
                        22523,
                        22548,
                        22578,
                        22603,
                        23703,
                        23738
                      ],
                      "referencedDeclaration": 23703,
                      "src": "905:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 34165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "905:38:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34166,
                  "nodeType": "ExpressionStatement",
                  "src": "905:38:37"
                }
              ]
            },
            "functionSelector": "23158e9e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_MockERC20_name",
            "nameLocation": "865:19:37",
            "parameters": {
              "id": 34158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "884:2:37"
            },
            "returnParameters": {
              "id": 34159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "894:0:37"
            },
            "scope": 34328,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34179,
            "nodeType": "FunctionDefinition",
            "src": "959:101:37",
            "nodes": [],
            "body": {
              "id": 34178,
              "nodeType": "Block",
              "src": "999:61:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 34172,
                            "name": "mockERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34140,
                            "src": "1019:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$1505",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 34173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1029:6:37",
                          "memberName": "symbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3172,
                          "src": "1019:16:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 34174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1019:18:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 34175,
                        "name": "_TEST_SYMBOL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34146,
                        "src": "1039:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 34171,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22384,
                        22409,
                        22439,
                        22464,
                        22523,
                        22548,
                        22578,
                        22603,
                        23703,
                        23738
                      ],
                      "referencedDeclaration": 23703,
                      "src": "1010:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 34176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1010:42:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34177,
                  "nodeType": "ExpressionStatement",
                  "src": "1010:42:37"
                }
              ]
            },
            "functionSelector": "b72fc1d1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_MockERC20_symbol",
            "nameLocation": "968:21:37",
            "parameters": {
              "id": 34169,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "989:2:37"
            },
            "returnParameters": {
              "id": 34170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "999:0:37"
            },
            "scope": 34328,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34243,
            "nodeType": "FunctionDefinition",
            "src": "1068:393:37",
            "nodes": [],
            "body": {
              "id": 34242,
              "nodeType": "Block",
              "src": "1134:327:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 34194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 34189,
                          "name": "to_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34181,
                          "src": "1155:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 34192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1170:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 34191,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1162:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 34190,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1162:7:37",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 34193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1162:10:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1155:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 34186,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34137,
                        "src": "1145:2:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$34107",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1148:6:37",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33745,
                      "src": "1145:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 34195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1145:28:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34196,
                  "nodeType": "ExpressionStatement",
                  "src": "1145:28:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 34202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 34200,
                          "name": "amount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34183,
                          "src": "1194:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 34201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1204:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1194:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 34197,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34137,
                        "src": "1184:2:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$34107",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1187:6:37",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33745,
                      "src": "1184:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 34203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1184:22:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34204,
                  "nodeType": "ExpressionStatement",
                  "src": "1184:22:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34208,
                            "name": "to_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34181,
                            "src": "1248:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34206,
                            "name": "mockERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34140,
                            "src": "1228:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$1505",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 34207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1238:9:37",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3203,
                          "src": "1228:19:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1228:24:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 34210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1254:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 34205,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22384,
                        22409,
                        22439,
                        22464,
                        22523,
                        22548,
                        22578,
                        22603,
                        23703,
                        23738
                      ],
                      "referencedDeclaration": 22578,
                      "src": "1219:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1219:37:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34212,
                  "nodeType": "ExpressionStatement",
                  "src": "1219:37:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 34214,
                            "name": "mockERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34140,
                            "src": "1276:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$1505",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 34215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1286:11:37",
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3190,
                          "src": "1276:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 34216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1276:23:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 34217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1301:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 34213,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22384,
                        22409,
                        22439,
                        22464,
                        22523,
                        22548,
                        22578,
                        22603,
                        23703,
                        23738
                      ],
                      "referencedDeclaration": 22578,
                      "src": "1267:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1267:36:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34219,
                  "nodeType": "ExpressionStatement",
                  "src": "1267:36:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34223,
                        "name": "to_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34181,
                        "src": "1331:3:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34224,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34183,
                        "src": "1336:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 34220,
                        "name": "mockERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34140,
                        "src": "1316:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$1505",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 34222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1326:4:37",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1467,
                      "src": "1316:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 34225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1316:28:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34226,
                  "nodeType": "ExpressionStatement",
                  "src": "1316:28:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34230,
                            "name": "to_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34181,
                            "src": "1386:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34228,
                            "name": "mockERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34140,
                            "src": "1366:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$1505",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 34229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1376:9:37",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3203,
                          "src": "1366:19:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1366:24:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34232,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34183,
                        "src": "1392:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34227,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22384,
                        22409,
                        22439,
                        22464,
                        22523,
                        22548,
                        22578,
                        22603,
                        23703,
                        23738
                      ],
                      "referencedDeclaration": 22578,
                      "src": "1357:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1357:43:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34234,
                  "nodeType": "ExpressionStatement",
                  "src": "1357:43:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 34236,
                            "name": "mockERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34140,
                            "src": "1420:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$1505",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 34237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1430:11:37",
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3190,
                          "src": "1420:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 34238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1420:23:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34239,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34183,
                        "src": "1445:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34235,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22384,
                        22409,
                        22439,
                        22464,
                        22523,
                        22548,
                        22578,
                        22603,
                        23703,
                        23738
                      ],
                      "referencedDeclaration": 22578,
                      "src": "1411:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1411:42:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34241,
                  "nodeType": "ExpressionStatement",
                  "src": "1411:42:37"
                }
              ]
            },
            "functionSelector": "d09435f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_MockERC20_mint",
            "nameLocation": "1077:19:37",
            "parameters": {
              "id": 34184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34181,
                  "mutability": "mutable",
                  "name": "to_",
                  "nameLocation": "1105:3:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 34243,
                  "src": "1097:11:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1097:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34183,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "1118:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 34243,
                  "src": "1110:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1110:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1096:30:37"
            },
            "returnParameters": {
              "id": 34185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1134:0:37"
            },
            "scope": 34328,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34327,
            "nodeType": "FunctionDefinition",
            "src": "1469:499:37",
            "nodes": [],
            "body": {
              "id": 34326,
              "nodeType": "Block",
              "src": "1535:433:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 34258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 34253,
                          "name": "to_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34245,
                          "src": "1556:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 34256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1571:1:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 34255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1563:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 34254,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1563:7:37",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 34257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1563:10:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1556:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 34250,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34137,
                        "src": "1546:2:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$34107",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1549:6:37",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33745,
                      "src": "1546:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 34259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1546:28:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34260,
                  "nodeType": "ExpressionStatement",
                  "src": "1546:28:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 34266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 34264,
                          "name": "amount_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34247,
                          "src": "1595:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 34265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1605:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1595:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 34261,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34137,
                        "src": "1585:2:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$34107",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1588:6:37",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33745,
                      "src": "1585:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 34267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1585:22:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34268,
                  "nodeType": "ExpressionStatement",
                  "src": "1585:22:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34272,
                            "name": "to_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34245,
                            "src": "1649:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34270,
                            "name": "mockERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34140,
                            "src": "1629:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$1505",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 34271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1639:9:37",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3203,
                          "src": "1629:19:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1629:24:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 34274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1655:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 34269,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22384,
                        22409,
                        22439,
                        22464,
                        22523,
                        22548,
                        22578,
                        22603,
                        23703,
                        23738
                      ],
                      "referencedDeclaration": 22578,
                      "src": "1620:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1620:37:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34276,
                  "nodeType": "ExpressionStatement",
                  "src": "1620:37:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 34278,
                            "name": "mockERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34140,
                            "src": "1677:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$1505",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 34279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1687:11:37",
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3190,
                          "src": "1677:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 34280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1677:23:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 34281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1702:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 34277,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22384,
                        22409,
                        22439,
                        22464,
                        22523,
                        22548,
                        22578,
                        22603,
                        23703,
                        23738
                      ],
                      "referencedDeclaration": 22578,
                      "src": "1668:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1668:36:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34283,
                  "nodeType": "ExpressionStatement",
                  "src": "1668:36:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34287,
                        "name": "to_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34245,
                        "src": "1732:3:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34288,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34247,
                        "src": "1737:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 34284,
                        "name": "mockERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34140,
                        "src": "1717:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$1505",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 34286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1727:4:37",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1467,
                      "src": "1717:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 34289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1717:28:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34290,
                  "nodeType": "ExpressionStatement",
                  "src": "1717:28:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34294,
                            "name": "to_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34245,
                            "src": "1787:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34292,
                            "name": "mockERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34140,
                            "src": "1767:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$1505",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 34293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1777:9:37",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3203,
                          "src": "1767:19:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1767:24:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34296,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34247,
                        "src": "1793:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34291,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22384,
                        22409,
                        22439,
                        22464,
                        22523,
                        22548,
                        22578,
                        22603,
                        23703,
                        23738
                      ],
                      "referencedDeclaration": 22578,
                      "src": "1758:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1758:43:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34298,
                  "nodeType": "ExpressionStatement",
                  "src": "1758:43:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34302,
                        "name": "to_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34245,
                        "src": "1823:3:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34299,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34137,
                        "src": "1814:2:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$34107",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1817:5:37",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33800,
                      "src": "1814:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 34303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1814:13:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34304,
                  "nodeType": "ExpressionStatement",
                  "src": "1814:13:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34308,
                        "name": "amount_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34247,
                        "src": "1855:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 34305,
                        "name": "mockERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34140,
                        "src": "1840:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MockERC20_$1505",
                          "typeString": "contract MockERC20"
                        }
                      },
                      "id": 34307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1850:4:37",
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1485,
                      "src": "1840:14:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 34309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1840:23:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34310,
                  "nodeType": "ExpressionStatement",
                  "src": "1840:23:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34314,
                            "name": "to_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34245,
                            "src": "1905:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 34312,
                            "name": "mockERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34140,
                            "src": "1885:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$1505",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 34313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1895:9:37",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3203,
                          "src": "1885:19:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 34315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1885:24:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 34316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1911:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 34311,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22384,
                        22409,
                        22439,
                        22464,
                        22523,
                        22548,
                        22578,
                        22603,
                        23703,
                        23738
                      ],
                      "referencedDeclaration": 22578,
                      "src": "1876:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1876:37:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34318,
                  "nodeType": "ExpressionStatement",
                  "src": "1876:37:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 34320,
                            "name": "mockERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34140,
                            "src": "1933:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$1505",
                              "typeString": "contract MockERC20"
                            }
                          },
                          "id": 34321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1943:11:37",
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3190,
                          "src": "1933:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 34322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1933:23:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 34323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1958:1:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 34319,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22384,
                        22409,
                        22439,
                        22464,
                        22523,
                        22548,
                        22578,
                        22603,
                        23703,
                        23738
                      ],
                      "referencedDeclaration": 22578,
                      "src": "1924:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1924:36:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34325,
                  "nodeType": "ExpressionStatement",
                  "src": "1924:36:37"
                }
              ]
            },
            "functionSelector": "718ee997",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_MockERC20_burn",
            "nameLocation": "1478:19:37",
            "parameters": {
              "id": 34248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34245,
                  "mutability": "mutable",
                  "name": "to_",
                  "nameLocation": "1506:3:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 34327,
                  "src": "1498:11:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34244,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1498:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34247,
                  "mutability": "mutable",
                  "name": "amount_",
                  "nameLocation": "1519:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 34327,
                  "src": "1511:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1511:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1497:30:37"
            },
            "returnParameters": {
              "id": 34249,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1535:0:37"
            },
            "scope": 34328,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34119,
              "name": "DSTest",
              "nameLocations": [
                "505:6:37"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23854,
              "src": "505:6:37"
            },
            "id": 34120,
            "nodeType": "InheritanceSpecifier",
            "src": "505:6:37"
          }
        ],
        "canonicalName": "MockERC20Test",
        "contractDependencies": [
          1505
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          34328,
          23854
        ],
        "name": "MockERC20Test",
        "nameLocation": "488:13:37",
        "scope": 34329,
        "usedErrors": [],
        "usedEvents": [
          22069,
          22073,
          22077,
          22081,
          22085,
          22089,
          22093,
          22097,
          22103,
          22109,
          22117,
          22125,
          22131,
          22137,
          22143,
          22149
        ]
      }
    ],
    "license": "Unlicense"
  },
  "id": 37
}