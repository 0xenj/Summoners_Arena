import { TAddressBookFields } from './types';
interface IAddressDetails {
    name: string;
    address: string;
    network: string;
    deployer: string;
    deploymentDate: string;
    chainId: number;
    blockHash?: string;
    blockNumber?: number;
    tag?: string;
    extra?: any;
}
export declare class AwesomeAddressBook {
    private readonly _env;
    constructor(hre: any);
    formatSaveContract(contractName: string, contractAddress: string, deployedNetwork: string, deployedBy: string, chainId: number, blockHash?: string, blockNumber?: number, tag?: string, extra?: any): IAddressDetails;
    saveContract(contractName: string, contractAddress: string, deployedNetwork: string, deployedBy: string, chainId?: number, blockHash?: string, blockNumber?: number, tag?: string, extra?: any, forceAdd?: boolean): void;
    retrieveContract(contractName: string, deployedNetwork: string): string;
    retrieveContractObject(contractName: string, deployedNetwork: string): IAddressDetails;
    retrieveOZAdminProxyContract(chainId: number): string;
    retrieveContractHistory(deployedNetwork: string): IAddressDetails[];
    cleanContractDeployed(field: TAddressBookFields, value: any, applyToPrimary?: boolean, applyToHistory?: boolean): void;
}
export {};
//# sourceMappingURL=AwesomeAddressBook.d.ts.map