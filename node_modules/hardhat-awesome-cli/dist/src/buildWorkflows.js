"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildWorkflowsFromCommand = void 0;
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const config_1 = require("./config");
const packageInstaller_1 = __importDefault(require("./packageInstaller"));
const buildWorkflowsFromCommand = async (workflowToAdd) => {
    const toAdd = config_1.DefaultGithubWorkflowsList.find((workflow) => workflow.file === workflowToAdd);
    if (toAdd !== undefined)
        await buildWorkflows(toAdd);
    return null;
};
exports.buildWorkflowsFromCommand = buildWorkflowsFromCommand;
const buildWorkflows = async (workflowToAdd) => {
    if (fs_1.default.existsSync('.github')) {
        if (!fs_1.default.existsSync('.github/workflows'))
            fs_1.default.mkdirSync('.github/workflows');
    }
    else {
        fs_1.default.mkdirSync('.github');
        fs_1.default.mkdirSync('.github/workflows');
    }
    if (require && require.main) {
        const packageRootPath = path_1.default.join(path_1.default.dirname(require.main.filename), '../../../hardhat-awesome-cli/src/githubWorkflows');
        if (fs_1.default.existsSync(packageRootPath + '/' + workflowToAdd.file + '.yml')) {
            if (!fs_1.default.existsSync('.github/workflows/' + workflowToAdd.file + '.yml')) {
                fs_1.default.copyFileSync(packageRootPath + '/' + workflowToAdd.file + '.yml', '.github/workflows/' + workflowToAdd.file + '.yml');
                console.log('\x1b[32m%s\x1b[0m', 'Creating workflow ' + workflowToAdd.title + ' in .github/workflows/' + workflowToAdd.file + '.yml');
                if (workflowToAdd.requirement !== undefined) {
                    if (workflowToAdd.requirement.length > 0) {
                        workflowToAdd.requirement.forEach(async (packageRequire) => {
                            await (0, packageInstaller_1.default)(packageRequire, true, false, true);
                        });
                    }
                }
            }
            else {
                console.log('\x1b[33m%s\x1b[0m', 'The workflow ' +
                    workflowToAdd.title +
                    ' already exists at .github/workflows/' +
                    workflowToAdd.file +
                    '.yml');
            }
        }
    }
};
exports.default = buildWorkflows;
//# sourceMappingURL=buildWorkflows.js.map